<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
       <!--引入配置属性文件 -->
       <bean id="redisConfigure" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath*:redis.properties</value>
                     </list>
              </property>
              <property name="ignoreUnresolvablePlaceholders" value="true" />
       </bean>

       <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
              <property name="maxTotal" value="${redis.maxTotal}" />
              <property name="maxIdle" value="${redis.maxIdle}" />
              <property name="maxWaitMillis" value="${redis.maxWait}" />
              <property name="testOnBorrow" value="${redis.testOnBorrow}" />
       </bean>

       <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
              <property name="hostName" value="${redis.host}" />
              <property name="port" value="${redis.port}" />
              <property name="poolConfig" ref="poolConfig" />
       </bean>

       <bean id="stringRedisSerializer"
             class="org.springframework.data.redis.serializer.StringRedisSerializer" />

       <bean id="template" class="org.springframework.data.redis.core.RedisTemplate"
             p:connectionFactory-ref="connectionFactory"
             p:keySerializer-ref="stringRedisSerializer"
             p:hashKeySerializer-ref="stringRedisSerializer"
             p:hashValueSerializer-ref="stringRedisSerializer" />

       <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
             p:connectionFactory-ref="connectionFactory" />

       <bean id="smsDao" class="com.module.user.dao.impl.SmsDaoImpl"/>

</beans>